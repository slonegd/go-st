// Code generated from ./antlr/ST.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type STLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var STLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func stlexerLexerInit() {
	staticData := &STLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'PROGRAM'", "'END_PROGRAM'", "'VAR'", "'END_VAR'", "':'", "':='",
		"';'", "'SINT'", "'INT'", "'DINT'", "'LINT'", "'USINT'", "'UINT'", "'UDINT'",
		"'ULINT'", "'REAL'", "'LREAL'", "'BOOL'", "'STRING'", "'IF'", "'THEN'",
		"'ELSIF'", "'ELSE'", "'END_IF'", "'WHILE'", "'DO'", "'END_WHILE'", "'('",
		"')'", "'*'", "'/'", "'MOD'", "'>'", "'>='", "'<'", "'<='", "'='", "'<>'",
		"", "", "", "", "", "", "'+'", "'-'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "Integer", "Hex_Int", "FLOAT", "ID", "Digit", "Hex_Digit",
		"PLUS", "MINUS", "Comment", "WHITESPACE",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
		"T__33", "T__34", "T__35", "T__36", "T__37", "Integer", "Hex_Int", "FLOAT",
		"ID", "Digit", "Hex_Digit", "PLUS", "MINUS", "Comment", "WHITESPACE",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 48, 386, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
		2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1,
		4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1,
		8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1,
		20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22,
		1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1,
		24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26,
		1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1,
		28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32,
		1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1,
		36, 1, 37, 1, 37, 1, 37, 1, 38, 4, 38, 275, 8, 38, 11, 38, 12, 38, 276,
		1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 3, 39, 284, 8, 39, 1, 39, 4, 39, 287,
		8, 39, 11, 39, 12, 39, 288, 1, 40, 3, 40, 292, 8, 40, 1, 40, 4, 40, 295,
		8, 40, 11, 40, 12, 40, 296, 1, 40, 1, 40, 5, 40, 301, 8, 40, 10, 40, 12,
		40, 304, 9, 40, 1, 40, 1, 40, 4, 40, 308, 8, 40, 11, 40, 12, 40, 309, 3,
		40, 312, 8, 40, 1, 40, 1, 40, 1, 40, 3, 40, 317, 8, 40, 1, 40, 4, 40, 320,
		8, 40, 11, 40, 12, 40, 321, 3, 40, 324, 8, 40, 1, 41, 1, 41, 5, 41, 328,
		8, 41, 10, 41, 12, 41, 331, 9, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1,
		44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 5, 46, 345, 8, 46, 10, 46,
		12, 46, 348, 9, 46, 1, 46, 3, 46, 351, 8, 46, 1, 46, 1, 46, 1, 46, 1, 46,
		1, 46, 5, 46, 358, 8, 46, 10, 46, 12, 46, 361, 9, 46, 1, 46, 1, 46, 1,
		46, 1, 46, 1, 46, 1, 46, 5, 46, 369, 8, 46, 10, 46, 12, 46, 372, 9, 46,
		1, 46, 1, 46, 3, 46, 376, 8, 46, 1, 46, 1, 46, 1, 47, 4, 47, 381, 8, 47,
		11, 47, 12, 47, 382, 1, 47, 1, 47, 2, 359, 370, 0, 48, 1, 1, 3, 2, 5, 3,
		7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13,
		27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22,
		45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31,
		63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40,
		81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95, 48, 1, 0, 5,
		3, 0, 65, 90, 95, 95, 97, 122, 5, 0, 36, 36, 48, 57, 65, 90, 95, 95, 97,
		122, 2, 0, 48, 57, 65, 70, 2, 0, 10, 10, 13, 13, 3, 0, 9, 10, 13, 13, 32,
		32, 405, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1,
		0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15,
		1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0,
		23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0,
		0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0,
		0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0,
		0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1,
		0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61,
		1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0,
		69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0,
		0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0,
		0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0,
		0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 1, 97, 1, 0, 0, 0, 3, 105,
		1, 0, 0, 0, 5, 117, 1, 0, 0, 0, 7, 121, 1, 0, 0, 0, 9, 129, 1, 0, 0, 0,
		11, 131, 1, 0, 0, 0, 13, 134, 1, 0, 0, 0, 15, 136, 1, 0, 0, 0, 17, 141,
		1, 0, 0, 0, 19, 145, 1, 0, 0, 0, 21, 150, 1, 0, 0, 0, 23, 155, 1, 0, 0,
		0, 25, 161, 1, 0, 0, 0, 27, 166, 1, 0, 0, 0, 29, 172, 1, 0, 0, 0, 31, 178,
		1, 0, 0, 0, 33, 183, 1, 0, 0, 0, 35, 189, 1, 0, 0, 0, 37, 194, 1, 0, 0,
		0, 39, 201, 1, 0, 0, 0, 41, 204, 1, 0, 0, 0, 43, 209, 1, 0, 0, 0, 45, 215,
		1, 0, 0, 0, 47, 220, 1, 0, 0, 0, 49, 227, 1, 0, 0, 0, 51, 233, 1, 0, 0,
		0, 53, 236, 1, 0, 0, 0, 55, 246, 1, 0, 0, 0, 57, 248, 1, 0, 0, 0, 59, 250,
		1, 0, 0, 0, 61, 252, 1, 0, 0, 0, 63, 254, 1, 0, 0, 0, 65, 258, 1, 0, 0,
		0, 67, 260, 1, 0, 0, 0, 69, 263, 1, 0, 0, 0, 71, 265, 1, 0, 0, 0, 73, 268,
		1, 0, 0, 0, 75, 270, 1, 0, 0, 0, 77, 274, 1, 0, 0, 0, 79, 278, 1, 0, 0,
		0, 81, 291, 1, 0, 0, 0, 83, 325, 1, 0, 0, 0, 85, 332, 1, 0, 0, 0, 87, 334,
		1, 0, 0, 0, 89, 336, 1, 0, 0, 0, 91, 338, 1, 0, 0, 0, 93, 375, 1, 0, 0,
		0, 95, 380, 1, 0, 0, 0, 97, 98, 5, 80, 0, 0, 98, 99, 5, 82, 0, 0, 99, 100,
		5, 79, 0, 0, 100, 101, 5, 71, 0, 0, 101, 102, 5, 82, 0, 0, 102, 103, 5,
		65, 0, 0, 103, 104, 5, 77, 0, 0, 104, 2, 1, 0, 0, 0, 105, 106, 5, 69, 0,
		0, 106, 107, 5, 78, 0, 0, 107, 108, 5, 68, 0, 0, 108, 109, 5, 95, 0, 0,
		109, 110, 5, 80, 0, 0, 110, 111, 5, 82, 0, 0, 111, 112, 5, 79, 0, 0, 112,
		113, 5, 71, 0, 0, 113, 114, 5, 82, 0, 0, 114, 115, 5, 65, 0, 0, 115, 116,
		5, 77, 0, 0, 116, 4, 1, 0, 0, 0, 117, 118, 5, 86, 0, 0, 118, 119, 5, 65,
		0, 0, 119, 120, 5, 82, 0, 0, 120, 6, 1, 0, 0, 0, 121, 122, 5, 69, 0, 0,
		122, 123, 5, 78, 0, 0, 123, 124, 5, 68, 0, 0, 124, 125, 5, 95, 0, 0, 125,
		126, 5, 86, 0, 0, 126, 127, 5, 65, 0, 0, 127, 128, 5, 82, 0, 0, 128, 8,
		1, 0, 0, 0, 129, 130, 5, 58, 0, 0, 130, 10, 1, 0, 0, 0, 131, 132, 5, 58,
		0, 0, 132, 133, 5, 61, 0, 0, 133, 12, 1, 0, 0, 0, 134, 135, 5, 59, 0, 0,
		135, 14, 1, 0, 0, 0, 136, 137, 5, 83, 0, 0, 137, 138, 5, 73, 0, 0, 138,
		139, 5, 78, 0, 0, 139, 140, 5, 84, 0, 0, 140, 16, 1, 0, 0, 0, 141, 142,
		5, 73, 0, 0, 142, 143, 5, 78, 0, 0, 143, 144, 5, 84, 0, 0, 144, 18, 1,
		0, 0, 0, 145, 146, 5, 68, 0, 0, 146, 147, 5, 73, 0, 0, 147, 148, 5, 78,
		0, 0, 148, 149, 5, 84, 0, 0, 149, 20, 1, 0, 0, 0, 150, 151, 5, 76, 0, 0,
		151, 152, 5, 73, 0, 0, 152, 153, 5, 78, 0, 0, 153, 154, 5, 84, 0, 0, 154,
		22, 1, 0, 0, 0, 155, 156, 5, 85, 0, 0, 156, 157, 5, 83, 0, 0, 157, 158,
		5, 73, 0, 0, 158, 159, 5, 78, 0, 0, 159, 160, 5, 84, 0, 0, 160, 24, 1,
		0, 0, 0, 161, 162, 5, 85, 0, 0, 162, 163, 5, 73, 0, 0, 163, 164, 5, 78,
		0, 0, 164, 165, 5, 84, 0, 0, 165, 26, 1, 0, 0, 0, 166, 167, 5, 85, 0, 0,
		167, 168, 5, 68, 0, 0, 168, 169, 5, 73, 0, 0, 169, 170, 5, 78, 0, 0, 170,
		171, 5, 84, 0, 0, 171, 28, 1, 0, 0, 0, 172, 173, 5, 85, 0, 0, 173, 174,
		5, 76, 0, 0, 174, 175, 5, 73, 0, 0, 175, 176, 5, 78, 0, 0, 176, 177, 5,
		84, 0, 0, 177, 30, 1, 0, 0, 0, 178, 179, 5, 82, 0, 0, 179, 180, 5, 69,
		0, 0, 180, 181, 5, 65, 0, 0, 181, 182, 5, 76, 0, 0, 182, 32, 1, 0, 0, 0,
		183, 184, 5, 76, 0, 0, 184, 185, 5, 82, 0, 0, 185, 186, 5, 69, 0, 0, 186,
		187, 5, 65, 0, 0, 187, 188, 5, 76, 0, 0, 188, 34, 1, 0, 0, 0, 189, 190,
		5, 66, 0, 0, 190, 191, 5, 79, 0, 0, 191, 192, 5, 79, 0, 0, 192, 193, 5,
		76, 0, 0, 193, 36, 1, 0, 0, 0, 194, 195, 5, 83, 0, 0, 195, 196, 5, 84,
		0, 0, 196, 197, 5, 82, 0, 0, 197, 198, 5, 73, 0, 0, 198, 199, 5, 78, 0,
		0, 199, 200, 5, 71, 0, 0, 200, 38, 1, 0, 0, 0, 201, 202, 5, 73, 0, 0, 202,
		203, 5, 70, 0, 0, 203, 40, 1, 0, 0, 0, 204, 205, 5, 84, 0, 0, 205, 206,
		5, 72, 0, 0, 206, 207, 5, 69, 0, 0, 207, 208, 5, 78, 0, 0, 208, 42, 1,
		0, 0, 0, 209, 210, 5, 69, 0, 0, 210, 211, 5, 76, 0, 0, 211, 212, 5, 83,
		0, 0, 212, 213, 5, 73, 0, 0, 213, 214, 5, 70, 0, 0, 214, 44, 1, 0, 0, 0,
		215, 216, 5, 69, 0, 0, 216, 217, 5, 76, 0, 0, 217, 218, 5, 83, 0, 0, 218,
		219, 5, 69, 0, 0, 219, 46, 1, 0, 0, 0, 220, 221, 5, 69, 0, 0, 221, 222,
		5, 78, 0, 0, 222, 223, 5, 68, 0, 0, 223, 224, 5, 95, 0, 0, 224, 225, 5,
		73, 0, 0, 225, 226, 5, 70, 0, 0, 226, 48, 1, 0, 0, 0, 227, 228, 5, 87,
		0, 0, 228, 229, 5, 72, 0, 0, 229, 230, 5, 73, 0, 0, 230, 231, 5, 76, 0,
		0, 231, 232, 5, 69, 0, 0, 232, 50, 1, 0, 0, 0, 233, 234, 5, 68, 0, 0, 234,
		235, 5, 79, 0, 0, 235, 52, 1, 0, 0, 0, 236, 237, 5, 69, 0, 0, 237, 238,
		5, 78, 0, 0, 238, 239, 5, 68, 0, 0, 239, 240, 5, 95, 0, 0, 240, 241, 5,
		87, 0, 0, 241, 242, 5, 72, 0, 0, 242, 243, 5, 73, 0, 0, 243, 244, 5, 76,
		0, 0, 244, 245, 5, 69, 0, 0, 245, 54, 1, 0, 0, 0, 246, 247, 5, 40, 0, 0,
		247, 56, 1, 0, 0, 0, 248, 249, 5, 41, 0, 0, 249, 58, 1, 0, 0, 0, 250, 251,
		5, 42, 0, 0, 251, 60, 1, 0, 0, 0, 252, 253, 5, 47, 0, 0, 253, 62, 1, 0,
		0, 0, 254, 255, 5, 77, 0, 0, 255, 256, 5, 79, 0, 0, 256, 257, 5, 68, 0,
		0, 257, 64, 1, 0, 0, 0, 258, 259, 5, 62, 0, 0, 259, 66, 1, 0, 0, 0, 260,
		261, 5, 62, 0, 0, 261, 262, 5, 61, 0, 0, 262, 68, 1, 0, 0, 0, 263, 264,
		5, 60, 0, 0, 264, 70, 1, 0, 0, 0, 265, 266, 5, 60, 0, 0, 266, 267, 5, 61,
		0, 0, 267, 72, 1, 0, 0, 0, 268, 269, 5, 61, 0, 0, 269, 74, 1, 0, 0, 0,
		270, 271, 5, 60, 0, 0, 271, 272, 5, 62, 0, 0, 272, 76, 1, 0, 0, 0, 273,
		275, 3, 85, 42, 0, 274, 273, 1, 0, 0, 0, 275, 276, 1, 0, 0, 0, 276, 274,
		1, 0, 0, 0, 276, 277, 1, 0, 0, 0, 277, 78, 1, 0, 0, 0, 278, 279, 5, 49,
		0, 0, 279, 280, 5, 54, 0, 0, 280, 281, 5, 35, 0, 0, 281, 286, 1, 0, 0,
		0, 282, 284, 5, 95, 0, 0, 283, 282, 1, 0, 0, 0, 283, 284, 1, 0, 0, 0, 284,
		285, 1, 0, 0, 0, 285, 287, 3, 87, 43, 0, 286, 283, 1, 0, 0, 0, 287, 288,
		1, 0, 0, 0, 288, 286, 1, 0, 0, 0, 288, 289, 1, 0, 0, 0, 289, 80, 1, 0,
		0, 0, 290, 292, 3, 91, 45, 0, 291, 290, 1, 0, 0, 0, 291, 292, 1, 0, 0,
		0, 292, 311, 1, 0, 0, 0, 293, 295, 3, 85, 42, 0, 294, 293, 1, 0, 0, 0,
		295, 296, 1, 0, 0, 0, 296, 294, 1, 0, 0, 0, 296, 297, 1, 0, 0, 0, 297,
		298, 1, 0, 0, 0, 298, 302, 5, 46, 0, 0, 299, 301, 3, 85, 42, 0, 300, 299,
		1, 0, 0, 0, 301, 304, 1, 0, 0, 0, 302, 300, 1, 0, 0, 0, 302, 303, 1, 0,
		0, 0, 303, 312, 1, 0, 0, 0, 304, 302, 1, 0, 0, 0, 305, 307, 5, 46, 0, 0,
		306, 308, 3, 85, 42, 0, 307, 306, 1, 0, 0, 0, 308, 309, 1, 0, 0, 0, 309,
		307, 1, 0, 0, 0, 309, 310, 1, 0, 0, 0, 310, 312, 1, 0, 0, 0, 311, 294,
		1, 0, 0, 0, 311, 305, 1, 0, 0, 0, 312, 323, 1, 0, 0, 0, 313, 316, 5, 69,
		0, 0, 314, 317, 3, 89, 44, 0, 315, 317, 3, 91, 45, 0, 316, 314, 1, 0, 0,
		0, 316, 315, 1, 0, 0, 0, 316, 317, 1, 0, 0, 0, 317, 319, 1, 0, 0, 0, 318,
		320, 3, 85, 42, 0, 319, 318, 1, 0, 0, 0, 320, 321, 1, 0, 0, 0, 321, 319,
		1, 0, 0, 0, 321, 322, 1, 0, 0, 0, 322, 324, 1, 0, 0, 0, 323, 313, 1, 0,
		0, 0, 323, 324, 1, 0, 0, 0, 324, 82, 1, 0, 0, 0, 325, 329, 7, 0, 0, 0,
		326, 328, 7, 1, 0, 0, 327, 326, 1, 0, 0, 0, 328, 331, 1, 0, 0, 0, 329,
		327, 1, 0, 0, 0, 329, 330, 1, 0, 0, 0, 330, 84, 1, 0, 0, 0, 331, 329, 1,
		0, 0, 0, 332, 333, 2, 48, 57, 0, 333, 86, 1, 0, 0, 0, 334, 335, 7, 2, 0,
		0, 335, 88, 1, 0, 0, 0, 336, 337, 5, 43, 0, 0, 337, 90, 1, 0, 0, 0, 338,
		339, 5, 45, 0, 0, 339, 92, 1, 0, 0, 0, 340, 341, 5, 47, 0, 0, 341, 342,
		5, 47, 0, 0, 342, 346, 1, 0, 0, 0, 343, 345, 8, 3, 0, 0, 344, 343, 1, 0,
		0, 0, 345, 348, 1, 0, 0, 0, 346, 344, 1, 0, 0, 0, 346, 347, 1, 0, 0, 0,
		347, 350, 1, 0, 0, 0, 348, 346, 1, 0, 0, 0, 349, 351, 5, 13, 0, 0, 350,
		349, 1, 0, 0, 0, 350, 351, 1, 0, 0, 0, 351, 352, 1, 0, 0, 0, 352, 376,
		5, 10, 0, 0, 353, 354, 5, 40, 0, 0, 354, 355, 5, 42, 0, 0, 355, 359, 1,
		0, 0, 0, 356, 358, 9, 0, 0, 0, 357, 356, 1, 0, 0, 0, 358, 361, 1, 0, 0,
		0, 359, 360, 1, 0, 0, 0, 359, 357, 1, 0, 0, 0, 360, 362, 1, 0, 0, 0, 361,
		359, 1, 0, 0, 0, 362, 363, 5, 42, 0, 0, 363, 376, 5, 41, 0, 0, 364, 365,
		5, 47, 0, 0, 365, 366, 5, 42, 0, 0, 366, 370, 1, 0, 0, 0, 367, 369, 9,
		0, 0, 0, 368, 367, 1, 0, 0, 0, 369, 372, 1, 0, 0, 0, 370, 371, 1, 0, 0,
		0, 370, 368, 1, 0, 0, 0, 371, 373, 1, 0, 0, 0, 372, 370, 1, 0, 0, 0, 373,
		374, 5, 42, 0, 0, 374, 376, 5, 47, 0, 0, 375, 340, 1, 0, 0, 0, 375, 353,
		1, 0, 0, 0, 375, 364, 1, 0, 0, 0, 376, 377, 1, 0, 0, 0, 377, 378, 6, 46,
		0, 0, 378, 94, 1, 0, 0, 0, 379, 381, 7, 4, 0, 0, 380, 379, 1, 0, 0, 0,
		381, 382, 1, 0, 0, 0, 382, 380, 1, 0, 0, 0, 382, 383, 1, 0, 0, 0, 383,
		384, 1, 0, 0, 0, 384, 385, 6, 47, 1, 0, 385, 96, 1, 0, 0, 0, 19, 0, 276,
		283, 288, 291, 296, 302, 309, 311, 316, 321, 323, 329, 346, 350, 359, 370,
		375, 382, 2, 0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// STLexerInit initializes any static state used to implement STLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSTLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func STLexerInit() {
	staticData := &STLexerLexerStaticData
	staticData.once.Do(stlexerLexerInit)
}

// NewSTLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSTLexer(input antlr.CharStream) *STLexer {
	STLexerInit()
	l := new(STLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &STLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ST.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// STLexer tokens.
const (
	STLexerT__0       = 1
	STLexerT__1       = 2
	STLexerT__2       = 3
	STLexerT__3       = 4
	STLexerT__4       = 5
	STLexerT__5       = 6
	STLexerT__6       = 7
	STLexerT__7       = 8
	STLexerT__8       = 9
	STLexerT__9       = 10
	STLexerT__10      = 11
	STLexerT__11      = 12
	STLexerT__12      = 13
	STLexerT__13      = 14
	STLexerT__14      = 15
	STLexerT__15      = 16
	STLexerT__16      = 17
	STLexerT__17      = 18
	STLexerT__18      = 19
	STLexerT__19      = 20
	STLexerT__20      = 21
	STLexerT__21      = 22
	STLexerT__22      = 23
	STLexerT__23      = 24
	STLexerT__24      = 25
	STLexerT__25      = 26
	STLexerT__26      = 27
	STLexerT__27      = 28
	STLexerT__28      = 29
	STLexerT__29      = 30
	STLexerT__30      = 31
	STLexerT__31      = 32
	STLexerT__32      = 33
	STLexerT__33      = 34
	STLexerT__34      = 35
	STLexerT__35      = 36
	STLexerT__36      = 37
	STLexerT__37      = 38
	STLexerInteger    = 39
	STLexerHex_Int    = 40
	STLexerFLOAT      = 41
	STLexerID         = 42
	STLexerDigit      = 43
	STLexerHex_Digit  = 44
	STLexerPLUS       = 45
	STLexerMINUS      = 46
	STLexerComment    = 47
	STLexerWHITESPACE = 48
)
