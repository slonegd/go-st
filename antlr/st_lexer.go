// Code generated from ./antlr/ST.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type STLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var STLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func stlexerLexerInit() {
	staticData := &STLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'PROGRAM'", "'END_PROGRAM'", "'VAR'", "'END_VAR'", "':'", "':='",
		"';'", "'SINT'", "'INT'", "'DINT'", "'LINT'", "'USINT'", "'UINT'", "'UDINT'",
		"'ULINT'", "'REAL'", "'LREAL'", "'BOOL'", "'STRING'", "'IF'", "'THEN'",
		"'ELSIF'", "'ELSE'", "'END_IF'", "'('", "')'", "'*'", "'/'", "'MOD'",
		"'>'", "'>='", "'<'", "'<='", "'='", "'<>'", "", "", "", "", "'+'",
		"'-'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "Integer", "Hex_Int", "Hex_Digit", "ID", "PLUS", "MINUS", "Comment",
		"WHITESPACE",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
		"T__33", "T__34", "Integer", "Hex_Int", "Hex_Digit", "ID", "PLUS", "MINUS",
		"Comment", "WHITESPACE",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 43, 322, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
		1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4,
		1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8,
		1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1,
		28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 32, 1, 32,
		1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 5, 35, 247, 8,
		35, 10, 35, 12, 35, 250, 9, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 3, 36,
		257, 8, 36, 1, 36, 4, 36, 260, 8, 36, 11, 36, 12, 36, 261, 1, 37, 1, 37,
		1, 38, 1, 38, 5, 38, 268, 8, 38, 10, 38, 12, 38, 271, 9, 38, 1, 39, 1,
		39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 5, 41, 281, 8, 41, 10, 41,
		12, 41, 284, 9, 41, 1, 41, 3, 41, 287, 8, 41, 1, 41, 1, 41, 1, 41, 1, 41,
		1, 41, 5, 41, 294, 8, 41, 10, 41, 12, 41, 297, 9, 41, 1, 41, 1, 41, 1,
		41, 1, 41, 1, 41, 1, 41, 5, 41, 305, 8, 41, 10, 41, 12, 41, 308, 9, 41,
		1, 41, 1, 41, 3, 41, 312, 8, 41, 1, 41, 1, 41, 1, 42, 4, 42, 317, 8, 42,
		11, 42, 12, 42, 318, 1, 42, 1, 42, 2, 295, 306, 0, 43, 1, 1, 3, 2, 5, 3,
		7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13,
		27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22,
		45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31,
		63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40,
		81, 41, 83, 42, 85, 43, 1, 0, 5, 2, 0, 48, 57, 65, 70, 3, 0, 65, 90, 95,
		95, 97, 122, 5, 0, 36, 36, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 10, 10,
		13, 13, 3, 0, 9, 10, 13, 13, 32, 32, 332, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0,
		0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0,
		0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1,
		0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27,
		1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0,
		35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0,
		0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0,
		0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0,
		0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1,
		0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73,
		1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0,
		81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 1, 87, 1, 0, 0, 0,
		3, 95, 1, 0, 0, 0, 5, 107, 1, 0, 0, 0, 7, 111, 1, 0, 0, 0, 9, 119, 1, 0,
		0, 0, 11, 121, 1, 0, 0, 0, 13, 124, 1, 0, 0, 0, 15, 126, 1, 0, 0, 0, 17,
		131, 1, 0, 0, 0, 19, 135, 1, 0, 0, 0, 21, 140, 1, 0, 0, 0, 23, 145, 1,
		0, 0, 0, 25, 151, 1, 0, 0, 0, 27, 156, 1, 0, 0, 0, 29, 162, 1, 0, 0, 0,
		31, 168, 1, 0, 0, 0, 33, 173, 1, 0, 0, 0, 35, 179, 1, 0, 0, 0, 37, 184,
		1, 0, 0, 0, 39, 191, 1, 0, 0, 0, 41, 194, 1, 0, 0, 0, 43, 199, 1, 0, 0,
		0, 45, 205, 1, 0, 0, 0, 47, 210, 1, 0, 0, 0, 49, 217, 1, 0, 0, 0, 51, 219,
		1, 0, 0, 0, 53, 221, 1, 0, 0, 0, 55, 223, 1, 0, 0, 0, 57, 225, 1, 0, 0,
		0, 59, 229, 1, 0, 0, 0, 61, 231, 1, 0, 0, 0, 63, 234, 1, 0, 0, 0, 65, 236,
		1, 0, 0, 0, 67, 239, 1, 0, 0, 0, 69, 241, 1, 0, 0, 0, 71, 244, 1, 0, 0,
		0, 73, 251, 1, 0, 0, 0, 75, 263, 1, 0, 0, 0, 77, 265, 1, 0, 0, 0, 79, 272,
		1, 0, 0, 0, 81, 274, 1, 0, 0, 0, 83, 311, 1, 0, 0, 0, 85, 316, 1, 0, 0,
		0, 87, 88, 5, 80, 0, 0, 88, 89, 5, 82, 0, 0, 89, 90, 5, 79, 0, 0, 90, 91,
		5, 71, 0, 0, 91, 92, 5, 82, 0, 0, 92, 93, 5, 65, 0, 0, 93, 94, 5, 77, 0,
		0, 94, 2, 1, 0, 0, 0, 95, 96, 5, 69, 0, 0, 96, 97, 5, 78, 0, 0, 97, 98,
		5, 68, 0, 0, 98, 99, 5, 95, 0, 0, 99, 100, 5, 80, 0, 0, 100, 101, 5, 82,
		0, 0, 101, 102, 5, 79, 0, 0, 102, 103, 5, 71, 0, 0, 103, 104, 5, 82, 0,
		0, 104, 105, 5, 65, 0, 0, 105, 106, 5, 77, 0, 0, 106, 4, 1, 0, 0, 0, 107,
		108, 5, 86, 0, 0, 108, 109, 5, 65, 0, 0, 109, 110, 5, 82, 0, 0, 110, 6,
		1, 0, 0, 0, 111, 112, 5, 69, 0, 0, 112, 113, 5, 78, 0, 0, 113, 114, 5,
		68, 0, 0, 114, 115, 5, 95, 0, 0, 115, 116, 5, 86, 0, 0, 116, 117, 5, 65,
		0, 0, 117, 118, 5, 82, 0, 0, 118, 8, 1, 0, 0, 0, 119, 120, 5, 58, 0, 0,
		120, 10, 1, 0, 0, 0, 121, 122, 5, 58, 0, 0, 122, 123, 5, 61, 0, 0, 123,
		12, 1, 0, 0, 0, 124, 125, 5, 59, 0, 0, 125, 14, 1, 0, 0, 0, 126, 127, 5,
		83, 0, 0, 127, 128, 5, 73, 0, 0, 128, 129, 5, 78, 0, 0, 129, 130, 5, 84,
		0, 0, 130, 16, 1, 0, 0, 0, 131, 132, 5, 73, 0, 0, 132, 133, 5, 78, 0, 0,
		133, 134, 5, 84, 0, 0, 134, 18, 1, 0, 0, 0, 135, 136, 5, 68, 0, 0, 136,
		137, 5, 73, 0, 0, 137, 138, 5, 78, 0, 0, 138, 139, 5, 84, 0, 0, 139, 20,
		1, 0, 0, 0, 140, 141, 5, 76, 0, 0, 141, 142, 5, 73, 0, 0, 142, 143, 5,
		78, 0, 0, 143, 144, 5, 84, 0, 0, 144, 22, 1, 0, 0, 0, 145, 146, 5, 85,
		0, 0, 146, 147, 5, 83, 0, 0, 147, 148, 5, 73, 0, 0, 148, 149, 5, 78, 0,
		0, 149, 150, 5, 84, 0, 0, 150, 24, 1, 0, 0, 0, 151, 152, 5, 85, 0, 0, 152,
		153, 5, 73, 0, 0, 153, 154, 5, 78, 0, 0, 154, 155, 5, 84, 0, 0, 155, 26,
		1, 0, 0, 0, 156, 157, 5, 85, 0, 0, 157, 158, 5, 68, 0, 0, 158, 159, 5,
		73, 0, 0, 159, 160, 5, 78, 0, 0, 160, 161, 5, 84, 0, 0, 161, 28, 1, 0,
		0, 0, 162, 163, 5, 85, 0, 0, 163, 164, 5, 76, 0, 0, 164, 165, 5, 73, 0,
		0, 165, 166, 5, 78, 0, 0, 166, 167, 5, 84, 0, 0, 167, 30, 1, 0, 0, 0, 168,
		169, 5, 82, 0, 0, 169, 170, 5, 69, 0, 0, 170, 171, 5, 65, 0, 0, 171, 172,
		5, 76, 0, 0, 172, 32, 1, 0, 0, 0, 173, 174, 5, 76, 0, 0, 174, 175, 5, 82,
		0, 0, 175, 176, 5, 69, 0, 0, 176, 177, 5, 65, 0, 0, 177, 178, 5, 76, 0,
		0, 178, 34, 1, 0, 0, 0, 179, 180, 5, 66, 0, 0, 180, 181, 5, 79, 0, 0, 181,
		182, 5, 79, 0, 0, 182, 183, 5, 76, 0, 0, 183, 36, 1, 0, 0, 0, 184, 185,
		5, 83, 0, 0, 185, 186, 5, 84, 0, 0, 186, 187, 5, 82, 0, 0, 187, 188, 5,
		73, 0, 0, 188, 189, 5, 78, 0, 0, 189, 190, 5, 71, 0, 0, 190, 38, 1, 0,
		0, 0, 191, 192, 5, 73, 0, 0, 192, 193, 5, 70, 0, 0, 193, 40, 1, 0, 0, 0,
		194, 195, 5, 84, 0, 0, 195, 196, 5, 72, 0, 0, 196, 197, 5, 69, 0, 0, 197,
		198, 5, 78, 0, 0, 198, 42, 1, 0, 0, 0, 199, 200, 5, 69, 0, 0, 200, 201,
		5, 76, 0, 0, 201, 202, 5, 83, 0, 0, 202, 203, 5, 73, 0, 0, 203, 204, 5,
		70, 0, 0, 204, 44, 1, 0, 0, 0, 205, 206, 5, 69, 0, 0, 206, 207, 5, 76,
		0, 0, 207, 208, 5, 83, 0, 0, 208, 209, 5, 69, 0, 0, 209, 46, 1, 0, 0, 0,
		210, 211, 5, 69, 0, 0, 211, 212, 5, 78, 0, 0, 212, 213, 5, 68, 0, 0, 213,
		214, 5, 95, 0, 0, 214, 215, 5, 73, 0, 0, 215, 216, 5, 70, 0, 0, 216, 48,
		1, 0, 0, 0, 217, 218, 5, 40, 0, 0, 218, 50, 1, 0, 0, 0, 219, 220, 5, 41,
		0, 0, 220, 52, 1, 0, 0, 0, 221, 222, 5, 42, 0, 0, 222, 54, 1, 0, 0, 0,
		223, 224, 5, 47, 0, 0, 224, 56, 1, 0, 0, 0, 225, 226, 5, 77, 0, 0, 226,
		227, 5, 79, 0, 0, 227, 228, 5, 68, 0, 0, 228, 58, 1, 0, 0, 0, 229, 230,
		5, 62, 0, 0, 230, 60, 1, 0, 0, 0, 231, 232, 5, 62, 0, 0, 232, 233, 5, 61,
		0, 0, 233, 62, 1, 0, 0, 0, 234, 235, 5, 60, 0, 0, 235, 64, 1, 0, 0, 0,
		236, 237, 5, 60, 0, 0, 237, 238, 5, 61, 0, 0, 238, 66, 1, 0, 0, 0, 239,
		240, 5, 61, 0, 0, 240, 68, 1, 0, 0, 0, 241, 242, 5, 60, 0, 0, 242, 243,
		5, 62, 0, 0, 243, 70, 1, 0, 0, 0, 244, 248, 2, 48, 57, 0, 245, 247, 2,
		48, 57, 0, 246, 245, 1, 0, 0, 0, 247, 250, 1, 0, 0, 0, 248, 246, 1, 0,
		0, 0, 248, 249, 1, 0, 0, 0, 249, 72, 1, 0, 0, 0, 250, 248, 1, 0, 0, 0,
		251, 252, 5, 49, 0, 0, 252, 253, 5, 54, 0, 0, 253, 254, 5, 35, 0, 0, 254,
		259, 1, 0, 0, 0, 255, 257, 5, 95, 0, 0, 256, 255, 1, 0, 0, 0, 256, 257,
		1, 0, 0, 0, 257, 258, 1, 0, 0, 0, 258, 260, 3, 75, 37, 0, 259, 256, 1,
		0, 0, 0, 260, 261, 1, 0, 0, 0, 261, 259, 1, 0, 0, 0, 261, 262, 1, 0, 0,
		0, 262, 74, 1, 0, 0, 0, 263, 264, 7, 0, 0, 0, 264, 76, 1, 0, 0, 0, 265,
		269, 7, 1, 0, 0, 266, 268, 7, 2, 0, 0, 267, 266, 1, 0, 0, 0, 268, 271,
		1, 0, 0, 0, 269, 267, 1, 0, 0, 0, 269, 270, 1, 0, 0, 0, 270, 78, 1, 0,
		0, 0, 271, 269, 1, 0, 0, 0, 272, 273, 5, 43, 0, 0, 273, 80, 1, 0, 0, 0,
		274, 275, 5, 45, 0, 0, 275, 82, 1, 0, 0, 0, 276, 277, 5, 47, 0, 0, 277,
		278, 5, 47, 0, 0, 278, 282, 1, 0, 0, 0, 279, 281, 8, 3, 0, 0, 280, 279,
		1, 0, 0, 0, 281, 284, 1, 0, 0, 0, 282, 280, 1, 0, 0, 0, 282, 283, 1, 0,
		0, 0, 283, 286, 1, 0, 0, 0, 284, 282, 1, 0, 0, 0, 285, 287, 5, 13, 0, 0,
		286, 285, 1, 0, 0, 0, 286, 287, 1, 0, 0, 0, 287, 288, 1, 0, 0, 0, 288,
		312, 5, 10, 0, 0, 289, 290, 5, 40, 0, 0, 290, 291, 5, 42, 0, 0, 291, 295,
		1, 0, 0, 0, 292, 294, 9, 0, 0, 0, 293, 292, 1, 0, 0, 0, 294, 297, 1, 0,
		0, 0, 295, 296, 1, 0, 0, 0, 295, 293, 1, 0, 0, 0, 296, 298, 1, 0, 0, 0,
		297, 295, 1, 0, 0, 0, 298, 299, 5, 42, 0, 0, 299, 312, 5, 41, 0, 0, 300,
		301, 5, 47, 0, 0, 301, 302, 5, 42, 0, 0, 302, 306, 1, 0, 0, 0, 303, 305,
		9, 0, 0, 0, 304, 303, 1, 0, 0, 0, 305, 308, 1, 0, 0, 0, 306, 307, 1, 0,
		0, 0, 306, 304, 1, 0, 0, 0, 307, 309, 1, 0, 0, 0, 308, 306, 1, 0, 0, 0,
		309, 310, 5, 42, 0, 0, 310, 312, 5, 47, 0, 0, 311, 276, 1, 0, 0, 0, 311,
		289, 1, 0, 0, 0, 311, 300, 1, 0, 0, 0, 312, 313, 1, 0, 0, 0, 313, 314,
		6, 41, 0, 0, 314, 84, 1, 0, 0, 0, 315, 317, 7, 4, 0, 0, 316, 315, 1, 0,
		0, 0, 317, 318, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0, 318, 319, 1, 0, 0, 0,
		319, 320, 1, 0, 0, 0, 320, 321, 6, 42, 1, 0, 321, 86, 1, 0, 0, 0, 11, 0,
		248, 256, 261, 269, 282, 286, 295, 306, 311, 318, 2, 0, 1, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// STLexerInit initializes any static state used to implement STLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSTLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func STLexerInit() {
	staticData := &STLexerLexerStaticData
	staticData.once.Do(stlexerLexerInit)
}

// NewSTLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSTLexer(input antlr.CharStream) *STLexer {
	STLexerInit()
	l := new(STLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &STLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ST.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// STLexer tokens.
const (
	STLexerT__0       = 1
	STLexerT__1       = 2
	STLexerT__2       = 3
	STLexerT__3       = 4
	STLexerT__4       = 5
	STLexerT__5       = 6
	STLexerT__6       = 7
	STLexerT__7       = 8
	STLexerT__8       = 9
	STLexerT__9       = 10
	STLexerT__10      = 11
	STLexerT__11      = 12
	STLexerT__12      = 13
	STLexerT__13      = 14
	STLexerT__14      = 15
	STLexerT__15      = 16
	STLexerT__16      = 17
	STLexerT__17      = 18
	STLexerT__18      = 19
	STLexerT__19      = 20
	STLexerT__20      = 21
	STLexerT__21      = 22
	STLexerT__22      = 23
	STLexerT__23      = 24
	STLexerT__24      = 25
	STLexerT__25      = 26
	STLexerT__26      = 27
	STLexerT__27      = 28
	STLexerT__28      = 29
	STLexerT__29      = 30
	STLexerT__30      = 31
	STLexerT__31      = 32
	STLexerT__32      = 33
	STLexerT__33      = 34
	STLexerT__34      = 35
	STLexerInteger    = 36
	STLexerHex_Int    = 37
	STLexerHex_Digit  = 38
	STLexerID         = 39
	STLexerPLUS       = 40
	STLexerMINUS      = 41
	STLexerComment    = 42
	STLexerWHITESPACE = 43
)
